<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[javascript实现继承]]></title>
      <url>https://mlxiao93.github.io/blog/blog/2017/02/04/js-extend/</url>
      <content type="html"><![CDATA[<h2 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h2><p>子类的原型指向父类的对象</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sup</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.foo = &#123;<span class="attr">name</span>: <span class="string">'hello'</span>&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sub</span>(<span class="params"></span>) </span>&#123;&#125;;</div><div class="line">Sub.prototype = <span class="keyword">new</span> Sup();</div><div class="line"></div><div class="line"><span class="comment">/* ---test--- */</span></div><div class="line"><span class="keyword">var</span> sub = <span class="keyword">new</span> Sub();</div><div class="line"><span class="built_in">console</span>.log(sub.foo.name);    <span class="comment">//hello</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p><em>缺点: 引用类型的成员会被所有子类的对象共享</em><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> Sub();</div><div class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> Sub();</div><div class="line">b.foo.name = <span class="string">"world"</span>;</div><div class="line"><span class="built_in">console</span>.log(a.foo.name, b.foo.name);   <span class="comment">//world world</span></div></pre></td></tr></table></figure></p>
<h2 id="借用构造函数"><a href="#借用构造函数" class="headerlink" title="借用构造函数"></a>借用构造函数</h2><p>利用<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply" target="_blank" rel="external">apply函数</a>拷贝父类的成员</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sup</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.foo = &#123;<span class="attr">name</span>: <span class="string">'hello'</span>&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sub</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  Sup.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/* ---test--- */</span></div><div class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> Sub();</div><div class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> Sub();</div><div class="line">b.foo.name = <span class="string">"world"</span>;</div><div class="line"><span class="built_in">console</span>.log(a.foo.name, b.foo.name);   <span class="comment">//hello world</span></div></pre></td></tr></table></figure>
<p><em>缺点：无法继承父类原型上的成员</em></p>
<h2 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h2><p>结合<a href="#原型链继承">原型链继承</a>和<a href="#借用构造函数">借用构造函数</a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sup</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.foo = &#123;<span class="attr">name</span>: <span class="string">'hello'</span>&#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sub</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  Sup.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</div><div class="line">&#125;;</div><div class="line">Sub.prototype = <span class="keyword">new</span> Sup();</div></pre></td></tr></table></figure></p>
<p><em>缺点：父类的构造函数被调用了两次</em></p>
<h2 id="寄生组合继承"><a href="#寄生组合继承" class="headerlink" title="寄生组合继承"></a>寄生组合继承</h2><ol>
<li><a href="#借用构造函数">借用构造函数</a></li>
<li>创建一个辅助函数使其原型指向父类的原型，新建一个该辅助函数的对象(该对象继承父类原型)</li>
<li>将该对象的constructor属性指向子类</li>
<li>将该对象作为子类的原型</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sup</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">this</span>.foo = &#123;<span class="attr">name</span>: <span class="string">'hello'</span>&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sub</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  Sup.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);   <span class="comment">// step 1</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// step 2</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Temp</span>(<span class="params"></span>) </span>&#123;&#125;</div><div class="line">Temp.prototype = Sup.prototype;</div><div class="line"><span class="keyword">let</span> temp = <span class="keyword">new</span> Temp();</div><div class="line"></div><div class="line">temp.constructor = Sub;  <span class="comment">// step 3</span></div><div class="line"></div><div class="line">Sub.prototype = temp;  <span class="comment">// step 4</span></div></pre></td></tr></table></figure>
<h2 id="ES6继承"><a href="#ES6继承" class="headerlink" title="ES6继承"></a>ES6继承</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sup</span> </span>&#123;&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">extends</span> <span class="title">Sup</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
  
  
</search>
